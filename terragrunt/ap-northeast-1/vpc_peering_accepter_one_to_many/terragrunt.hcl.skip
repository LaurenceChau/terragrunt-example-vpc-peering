locals {
  region_vars    = read_terragrunt_config(find_in_parent_folders("region.hcl"))
  account_vars   = read_terragrunt_config(find_in_parent_folders("account.hcl"))
  aws_account_id = local.account_vars.locals.aws_account_id
  aws_region     = local.region_vars.locals.aws_region
}

terraform {
  source = "git::https://github.com/LaurenceChau/my-terraform-modules.git//vpc_peering_accepter"
}

include {
  path = find_in_parent_folders()
}

dependency "tko-vpc-1" {
  config_path                             = "../network"
  mock_outputs_allowed_terraform_commands = ["validate"]
  mock_outputs = {
    vpc_name           = "mock-vpc-name"
    vpc_id             = "mock-vpc-id"
    vpc_cidr_block     = "mock-vpc-cidr-block"
    public_subnet_ids  = ["mock-id1", "mock-id2"]
    private_subnet_ids = ["mock-id1", "mock-id2"]
    subnet_cidr_blocks = {
      mock-subnet-1 = "mock-subnet-cidr-block"
    }
  }
}

dependency "sg-vpc-1" {
  config_path                             = "${get_parent_terragrunt_dir()}/ap-southeast-1/network"
  mock_outputs_allowed_terraform_commands = ["validate", "plan"]
  mock_outputs = {
    vpc_cidr_block = "mock-vpc-cidr-block"
  }
}

dependency "vpc_peering_request-1" {
  config_path                             = "${get_parent_terragrunt_dir()}/ap-southeast-1/vpc-peering"
  mock_outputs_allowed_terraform_commands = ["validate", "plan"]
  mock_outputs = {
    peering_connection_ids = {
      "vpc-013359d6c7ab4e1a7" = "pcx-0c62efd9b7f95d7bf"
      "vpc-014d8789ac5f3cd81" = "pcx-0a0951bc174af8a02"
    }
    peering_connection_names = {
      "vpc-013359d6c7ab4e1a7" = "test-peering-peering-requester"
      "vpc-014d8789ac5f3cd81" = "test-peering-peering-requester"
    }
  }
}

inputs = {
  vpc_id                             = dependency.vpc.outputs.vpc_id
  subnet_ids_for_route_tables_filter = dependency.vpc.outputs.private_subnet_ids
  # tags = {
  #   tag1 = "value1"
  #   tag2 = "value1"
  # }

  vpc_peering_requests = [
    {
      connection_name      = dependency.vpc_peering_requests.outputs.peering_connection_names[dependency.vpc.outputs.vpc_id]
      connection_id        = dependency.vpc_peering_requests.outputs.peering_connection_ids[dependency.vpc.outputs.vpc_id]
      requester_cidr_block = dependency.vpc_requester.outputs.vpc_cidr_block
      # tags = {
      #   tag-a = "value1"
      #   tag-b = "value2"
      # }
    },
    
  ]
}